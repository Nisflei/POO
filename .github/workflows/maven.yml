# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { name: "default", javaVersion: 8 }
          - { name: "default", javaVersion: 17 }
          - { name: "over TCP", dockerHost: "tcp://127.0.0.1:2375", javaVersion: 8 }
          - { name: "Docker 19.03.9", dockerVersion: "5:19.03.9~3-0~ubuntu-focal", javaVersion: 8 }

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Compile and run Java program
      run: java -cp target/classes org.example.Main
      
    - name: Configure Docker
      env:
          DOCKER_VERSION: ${{matrix.dockerVersion}}
          DOCKER_HOST: ${{matrix.dockerHost}}
      run: ./setup_docker.sh
    - name: Build with Maven
      env:
          DOCKER_HOST: ${{matrix.dockerHost}}
      run: |
          [[ -z "$DOCKER_HOST" ]] && unset DOCKER_HOST
          ./mvnw --no-transfer-progress verify 
